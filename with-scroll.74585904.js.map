{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAMA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,gBACnCC,UAAWF,SAASC,cAAc,YAClCE,WAAYH,SAASC,cAAc,cAG/BG,EAAa,IAAI,EAAAR,EAAAS,SAEvBP,EAAKC,WAAWO,iBAAiB,UAajCC,eAAkCC,GAQhC,GAPAA,EAAIC,iBAEJC,IAEAN,EAAWO,MAAQH,EAAII,OAAOC,SAAS,YAAeC,MAAMC,OAC5DX,EAAWY,YAEc,KAArBZ,EAAWO,MAGb,OAFAD,SA2DFO,EAAAC,GAASC,OAAOC,QAAQ,mCAtDxB,IACE,MAAMC,QAAajB,EAAWkB,cAC9B,IAAKD,EAAKE,KAAKC,OAEb,YAsDJP,EAAAC,GAASC,OAAOM,QACd,4EArDAC,EAAaL,EAAKE,MAyDKT,EAxDLO,EAAKM,UAyDzBV,EAAAC,GAASC,OAAOS,QAAQ,oBAAoBd,YAAiB,CAC3De,QAAS,MAzDTC,EAAQC,UA2BZ,WACE,MAAQC,OAAQC,GACdnC,EAAKI,UAAUgC,kBAAkBC,wBAEnCC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,UAEd,CAlCIC,EACF,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CAmDF,IAA2B3B,CAlD3B,IAnCiB,IAAI8B,sBAqCrB,SAAiBC,GACf,IACEA,EAAQC,SAAQvC,MAAMwC,IACpB,GAAIA,EAAMC,gBAAuC,KAArB5C,EAAWO,MAAc,CACnDP,EAAW6C,gBACX,MAAM5B,QAAajB,EAAWkB,cAI9B,GAHAI,EAAaL,EAAKE,MAClBO,EAAQC,UAEJjC,EAAKI,UAAUgD,mBAAqB7B,EAAKM,UAE3C,YA4CRV,EAAAC,GAASC,OAAOgC,KACd,6DA3CE,IAEJ,CAAE,MAAOV,GACPC,QAAQC,IAAIF,EACd,CACF,GA3DgB,CACdW,WAAY,UAILC,QAAQvD,EAAKK,YAEtB,IAAI2B,EAAU,IAAIb,EAAAqC,GAAJ,CAAmB,aAAc,CAC7CC,aAAc,IACdC,aAAc,QA8DhB,SAAS9B,EAAa+B,GACpB3D,EAAKI,UAAUwD,mBAAmB,aAAa,EAAAC,EAAAtD,SAAkBoD,GACnE,CAEA,SAAS/C,IACPZ,EAAKI,UAAU0D,UAAY,EAC7B,CAwBA,MAAMC,EAAU7D,SAASC,cAAc,UAEvCyC,QAAQC,IAAIkB,GAgBZzB,OAAO9B,iBAAiB,UAdxB,WACEoC,QAAQC,IAAImB,SACRA,QAAU,KACZD,EAAQE,UAAUC,OAAO,QACzBC,YAAW,KACTJ,EAAQE,UAAUC,OAAO,YACxB,MAEHC,YAAW,KACTJ,EAAQE,UAAUG,IAAI,UACtBL,EAAQE,UAAUG,IAAI,UACrB,IACP","sources":["src/js/with-scroll.js"],"sourcesContent":["import PixabayAPI from './pixabay-api';\nimport createGalleryCard from '../templates/gallery-card.hbs';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  galleryEl: document.querySelector('.gallery'),\n  observerEl: document.querySelector('.observer'),\n};\n\nconst pixabayAPI = new PixabayAPI();\n\nrefs.searchForm.addEventListener('submit', handelSearchImages);\nconst options = {\n  rootMargin: '200px',\n};\n\nconst observer = new IntersectionObserver(onEntry, options);\nobserver.observe(refs.observerEl);\n\nlet gallery = new SimpleLightbox('.gallery a', {\n  captionDelay: 250,\n  captionsData: 'alt',\n});\n\nasync function handelSearchImages(evt) {\n  evt.preventDefault();\n\n  clearImagesContainer();\n\n  pixabayAPI.query = evt.target.elements['searchQuery'].value.trim();\n  pixabayAPI.resetPage();\n\n  if (pixabayAPI.query === '') {\n    clearImagesContainer();\n    makeFailureMessageOnEmptyString();\n    return;\n  }\n\n  try {\n    const data = await pixabayAPI.fetchPhotos();\n    if (!data.hits.length) {\n      makeWrongMessage();\n      return;\n    }\n    renderImages(data.hits);\n    makeSuccesMessage(data.totalHits);\n    gallery.refresh();\n    smoothScroll();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction onEntry(entries) {\n  try {\n    entries.forEach(async entry => {\n      if (entry.isIntersecting && pixabayAPI.query !== '') {\n        pixabayAPI.incrementPage();\n        const data = await pixabayAPI.fetchPhotos();\n        renderImages(data.hits);\n        gallery.refresh();\n\n        if (refs.galleryEl.childElementCount >= data.totalHits) {\n          makeInfoMessage();\n          return;\n        }\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction smoothScroll() {\n  const { height: cardHeight } =\n    refs.galleryEl.firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\nfunction renderImages(image) {\n  refs.galleryEl.insertAdjacentHTML('beforeend', createGalleryCard(image));\n}\n\nfunction clearImagesContainer() {\n  refs.galleryEl.innerHTML = '';\n}\n\nfunction makeFailureMessageOnEmptyString() {\n  Notiflix.Notify.warning('Please, enter your search query');\n}\n\nfunction makeWrongMessage() {\n  Notiflix.Notify.failure(\n    'Sorry, there are no images matching your search query. Please try again.'\n  );\n}\n\nfunction makeSuccesMessage(value) {\n  Notiflix.Notify.success(`Hooray! We found ${value} images.`, {\n    timeout: 4000,\n  });\n}\n\nfunction makeInfoMessage() {\n  Notiflix.Notify.info(\n    \"We're sorry, but you've reached the end of search results.\"\n  );\n}\n\nconst btnUpEL = document.querySelector('.go-up');\n\nconsole.log(btnUpEL);\n\nfunction onScrollWindow() {\n  console.log(scrollY);\n  if (scrollY > 800) {\n    btnUpEL.classList.remove('hide');\n    setTimeout(() => {\n      btnUpEL.classList.remove('hiding');\n    }, 300);\n  } else\n    setTimeout(() => {\n      btnUpEL.classList.add('hiding');\n      btnUpEL.classList.add('hide');\n    }, 300);\n}\n\nwindow.addEventListener('scroll', onScrollWindow);\n\n// const btnUp = {\n// btnUpEL: document.querySelector('go-up'),\n// scrolling: false,\n\n//   show() {\n//     btnUpEL.classList.remove('hide');\n//   },\n\n//   hide() {\n//     btnUpEL.classList.add('hide');\n//   },\n\n//   onScrollWindow() {\n//     window.addEventListener('scroll', () => {\n//       if (scrollY < 800) {\n//         this.hide;\n//         return;\n//       } else if (scrollY > 800) {\n//         this.show();\n//         return;\n//       }\n//     });\n//   },\n// };\n// console.log(scrollY < 800);\n\n// window.addEventListener('scroll', () => {\n//   console.log(scrollY > 1000);\n// });\n\n//  btnUp.addEventListener('click', () => {\n//     window.scrollTo({\n//       top: 0,\n//       left: 0,\n//       behavior: 'smooth',\n//     });\n//   });\n"],"names":["$6fOXY","parcelRequire","$9894147071bb21aa$var$refs","searchForm","document","querySelector","galleryEl","observerEl","$9894147071bb21aa$var$pixabayAPI","default","addEventListener","async","evt","preventDefault","$9894147071bb21aa$var$clearImagesContainer","query","target","elements","value","trim","resetPage","$parcel$interopDefault","$7Y9D8","Notify","warning","data","fetchPhotos","hits","length","failure","$9894147071bb21aa$var$renderImages","totalHits","success","timeout","$9894147071bb21aa$var$gallery","refresh","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$9894147071bb21aa$var$smoothScroll","error","console","log","IntersectionObserver","entries","forEach","entry","isIntersecting","incrementPage","childElementCount","info","rootMargin","observe","$fZKcF","captionDelay","captionsData","image","insertAdjacentHTML","$cdIRi","innerHTML","$9894147071bb21aa$var$btnUpEL","scrollY","classList","remove","setTimeout","add"],"version":3,"file":"with-scroll.74585904.js.map"}
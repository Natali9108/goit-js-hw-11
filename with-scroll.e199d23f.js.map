{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SCAO,MAAMC,EAAUC,SAASC,cAAc,UAE9CC,OAAOC,iBAAiB,UAUxB,WACMC,QAAU,KACZL,EAAQM,UAAUC,OAAO,QACzBC,YAAW,KACTR,EAAQM,UAAUC,OAAO,YACxB,MAEHC,YAAW,KACTR,EAAQM,UAAUG,IAAI,UACtBT,EAAQM,UAAUG,IAAI,UACrB,IACP,IAnBAT,EAAQI,iBAAiB,SAAS,KAChCD,OAAOO,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,UACZ,I,2CDFF,MAAMC,EAAO,CACXC,WAAYd,SAASC,cAAc,gBACnCc,UAAWf,SAASC,cAAc,YAClCe,WAAYhB,SAASC,cAAc,cAG/BgB,EAAa,IAAI,EAAApB,EAAAqB,SAEvBL,EAAKC,WAAWX,iBAAiB,UAajCgB,eAAkCC,GAQhC,GAPAA,EAAIC,iBAEJC,IAEAL,EAAWM,MAAQH,EAAII,OAAOC,SAAS,YAAeC,MAAMC,OAC5DV,EAAWW,YAEc,KAArBX,EAAWM,MAGb,OAFAD,SA2DFO,EAAAC,GAASC,OAAOC,QAAQ,mCAtDxB,IACE,MAAMC,QAAahB,EAAWiB,cAC9B,IAAKD,EAAKE,KAAKC,OAEb,YAsDJP,EAAAC,GAASC,OAAOM,QACd,4EArDAC,EAAaL,EAAKE,MAyDKT,EAxDLO,EAAKM,UAyDzBV,EAAAC,GAASC,OAAOS,QAAQ,oBAAoBd,YAAiB,CAC3De,QAAS,MAzDTC,EAAQC,UA2BZ,WACE,MAAQC,OAAQC,GACdhC,EAAKE,UAAU+B,kBAAkBC,wBAEnC7C,OAAO8C,SAAS,CACdtC,IAAkB,EAAbmC,EACLjC,SAAU,UAEd,CAlCIqC,EACF,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CAmDF,IAA2BxB,CAlD3B,IAnCiB,IAAI2B,sBAqCrB,SAAiBC,GACf,IACEA,EAAQC,SAAQpC,MAAMqC,IACpB,GAAIA,EAAMC,gBAAuC,KAArBxC,EAAWM,MAAc,CACnDN,EAAWyC,gBACX,MAAMzB,QAAahB,EAAWiB,cAI9B,GAHAI,EAAaL,EAAKE,MAClBO,EAAQC,UAEJ9B,EAAKE,UAAU4C,mBAAqB1B,EAAKM,UAE3C,YA4CRV,EAAAC,GAASC,OAAO6B,KACd,6DA3CE,IAEJ,CAAE,MAAOV,GACPC,QAAQC,IAAIF,EACd,CACF,GA3DgB,CACdW,WAAY,UAILC,QAAQjD,EAAKG,YAEtB,IAAI0B,EAAU,IAAIb,EAAAkC,GAAJ,CAAmB,aAAc,CAC7CC,aAAc,IACdC,aAAc,QA8DhB,SAAS3B,EAAa4B,GACpBrD,EAAKE,UAAUoD,mBAAmB,aAAa,EAAAC,EAAAlD,SAAkBgD,GACnE,CAEA,SAAS5C,IACPT,EAAKE,UAAUsD,UAAY,EAC7B,C","sources":["src/js/with-scroll.js","src/js/btn-up.js"],"sourcesContent":["import PixabayAPI from './pixabay-api';\nimport btnUpEL from './btn-up';\nimport createGalleryCard from '../templates/gallery-card.hbs';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  galleryEl: document.querySelector('.gallery'),\n  observerEl: document.querySelector('.observer'),\n};\n\nconst pixabayAPI = new PixabayAPI();\n\nrefs.searchForm.addEventListener('submit', handelSearchImages);\nconst options = {\n  rootMargin: '200px',\n};\n\nconst observer = new IntersectionObserver(onEntry, options);\nobserver.observe(refs.observerEl);\n\nlet gallery = new SimpleLightbox('.gallery a', {\n  captionDelay: 250,\n  captionsData: 'alt',\n});\n\nasync function handelSearchImages(evt) {\n  evt.preventDefault();\n\n  clearImagesContainer();\n\n  pixabayAPI.query = evt.target.elements['searchQuery'].value.trim();\n  pixabayAPI.resetPage();\n\n  if (pixabayAPI.query === '') {\n    clearImagesContainer();\n    makeFailureMessageOnEmptyString();\n    return;\n  }\n\n  try {\n    const data = await pixabayAPI.fetchPhotos();\n    if (!data.hits.length) {\n      makeWrongMessage();\n      return;\n    }\n    renderImages(data.hits);\n    makeSuccesMessage(data.totalHits);\n    gallery.refresh();\n    smoothScroll();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction onEntry(entries) {\n  try {\n    entries.forEach(async entry => {\n      if (entry.isIntersecting && pixabayAPI.query !== '') {\n        pixabayAPI.incrementPage();\n        const data = await pixabayAPI.fetchPhotos();\n        renderImages(data.hits);\n        gallery.refresh();\n\n        if (refs.galleryEl.childElementCount >= data.totalHits) {\n          makeInfoMessage();\n          return;\n        }\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction smoothScroll() {\n  const { height: cardHeight } =\n    refs.galleryEl.firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\nfunction renderImages(image) {\n  refs.galleryEl.insertAdjacentHTML('beforeend', createGalleryCard(image));\n}\n\nfunction clearImagesContainer() {\n  refs.galleryEl.innerHTML = '';\n}\n\nfunction makeFailureMessageOnEmptyString() {\n  Notiflix.Notify.warning('Please, enter your search query');\n}\n\nfunction makeWrongMessage() {\n  Notiflix.Notify.failure(\n    'Sorry, there are no images matching your search query. Please try again.'\n  );\n}\n\nfunction makeSuccesMessage(value) {\n  Notiflix.Notify.success(`Hooray! We found ${value} images.`, {\n    timeout: 4000,\n  });\n}\n\nfunction makeInfoMessage() {\n  Notiflix.Notify.info(\n    \"We're sorry, but you've reached the end of search results.\"\n  );\n}\n","export const btnUpEL = document.querySelector('.go-up');\n\nwindow.addEventListener('scroll', onScrollWindow);\n\nbtnUpEL.addEventListener('click', () => {\n  window.scrollTo({\n    top: 0,\n    left: 0,\n    behavior: 'smooth',\n  });\n});\n\nfunction onScrollWindow() {\n  if (scrollY > 600) {\n    btnUpEL.classList.remove('hide');\n    setTimeout(() => {\n      btnUpEL.classList.remove('hiding');\n    }, 300);\n  } else\n    setTimeout(() => {\n      btnUpEL.classList.add('hiding');\n      btnUpEL.classList.add('hide');\n    }, 300);\n}\n"],"names":["$8H72y","parcelRequire","$2febe35bd0d42f19$export$4599ff21e4e6c079","document","querySelector","window","addEventListener","scrollY","classList","remove","setTimeout","add","scrollTo","top","left","behavior","$09be10307ee3a3c8$var$refs","searchForm","galleryEl","observerEl","$09be10307ee3a3c8$var$pixabayAPI","default","async","evt","preventDefault","$09be10307ee3a3c8$var$clearImagesContainer","query","target","elements","value","trim","resetPage","$parcel$interopDefault","$6JpON","Notify","warning","data","fetchPhotos","hits","length","failure","$09be10307ee3a3c8$var$renderImages","totalHits","success","timeout","$09be10307ee3a3c8$var$gallery","refresh","height","cardHeight","firstElementChild","getBoundingClientRect","scrollBy","$09be10307ee3a3c8$var$smoothScroll","error","console","log","IntersectionObserver","entries","forEach","entry","isIntersecting","incrementPage","childElementCount","info","rootMargin","observe","$5IjG7","captionDelay","captionsData","image","insertAdjacentHTML","$86MAb","innerHTML"],"version":3,"file":"with-scroll.e199d23f.js.map"}